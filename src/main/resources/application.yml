server:
  # 端口
  port: 8080

# 连接数据库
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/aitourism?useSSL=false&serverTimezone=Asia/Shanghai&characterEncoding=utf8
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  jackson:
    property-naming-strategy: SNAKE_CASE
  output:
    ansi:
      enabled: ALWAYS

#
#  ai:
#    dashscope:
#      # 需要替换为你自己的 key
#      api-key: xxxx
#      chat:
#        options:
#          model: qwen-plus
#    ollama:
#      base-url: http://localhost:11434
#      chat:
#        model: deepseek-r1:1.5b
#    mcp:
#      client:
#        enabled: true
#        name: my-mcp-client
#        version: 1.0.0
#        request-timeout: 30s
#        type: SYNC
#        sse:
#          connections:
#            server1:
#              url: http://localhost:8290
#        stdio:
#          servers-configuration: classpath:mcp-servers.json


# MCP服务配置
mcp:
  clients:
    - name: "amap"
      sse-url: "https://mcp.amap.com/sse?key=a7a5be837d1645cd49c74a601187bc35"
      log-requests: true
      log-responses: true
      connect-timeout: 30s
      read-timeout: 120s
    - name: "local"
      sse-url: "http://localhost:3000/sse"
      log-requests: true
      log-responses: true
      connect-timeout: 30s
      read-timeout: 120s

# OpenAI配置
openai:
  api-key: "sk-O5VvgPh3jH19zSE0wkxXwVz6P715WDlPwONNiHd7XOcJLTb6"
  base-url: "https://api.chatanywhere.tech/v1"
  model-name: "gpt-5-mini"

# HTTP客户端配置
http:
  client:
    connect-timeout: 30000
    read-timeout: 120000
    max-connections: 100
    keep-alive-duration: 300000

# 应用配置
app:
  mcp:
    health-check-interval: 300000  # 5分钟
    retry-attempts: 3
    retry-delay: 5000


# MyBatis 写数据库
mybatis:
  mapper-locations: classpath:/mapper/*.xml
  type-aliases-package: com.example.aitourism.entity
  configuration:
    map-underscore-to-camel-case: true


# 日志
logging:
  file:
    name: app.log
    # 或者使用 path
    # path: ./logs
  level:
    com.example.aitourism: INFO
    org.springframework.web: INFO
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%highlight(%-5level)] [%thread] [%X{traceId}] %-5level %logger{36}:%line - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%highlight(%-5level)] [%thread] [%X{traceId}] %-5level %logger{36}:%line - %msg%n"